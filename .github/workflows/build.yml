name: Build and publish Flatpak repository

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/flathub-infra/flatpak-github-actions:freedesktop-23.08
      options: --privileged

    steps:
      - uses: actions/checkout@v3

      - name: Setup environment
        shell: bash
        run: |
          echo "Setting up environment..."
          # Set up a user as the docker image comes with none
          cat <<EOF > /etc/passwd
          root:x:0:0:root:/root:/bin/bash
          EOF
          
          cat <<EOF > /etc/group
          root:x:0:
          EOF
          
          # Configure Git for Flatpak operations
          git config --global --add safe.directory /__w/flatpak-pieces-test/flatpak-pieces-test
          
          # Add Flathub repository for dependencies
          flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
          
          # Set up GPG the GitLab way
          gpg --list-keys --with-keygrip
          echo "allow-preset-passphrase" >> ~/.gnupg/gpg-agent.conf
          gpg-connect-agent reloadagent /bye
          
          # Import the GPG key
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --import --batch
          
          # Get the keygrip from the imported key
          KEY_GRIP=$(gpg --with-keygrip --list-secret-keys ${{ secrets.GPG_KEY_ID }} | grep Keygrip | awk '{print $3}')
          echo "Using keygrip: $KEY_GRIP"
          
          # Use preset-passphrase to set the passphrase
          echo "${{ secrets.GPG_PASSPHRASE }}" | /usr/libexec/gpg-preset-passphrase --preset "$KEY_GRIP"
          
          # Check if shared-modules exists, if not clone it
          if [ ! -d "shared-modules" ]; then
            git clone https://github.com/flathub/shared-modules
          fi

      - name: Build Pieces OS
        env:
          APP_ID: com.pieces.os
        shell: bash
        run: |
          # Fix for icon warning
          cd apps/${APP_ID}
          if [ -f "pieces_server.png" ]; then
            cp pieces_server.png com.pieces.os.png
            # Update desktop file
            if [ -f "pieces-os.desktop" ]; then
              sed -i 's/Icon=pieces_server/Icon=com.pieces.os/g' pieces-os.desktop
            fi
          fi
          cd -
          
          # Build with GPG signing
          flatpak-builder --verbose --user --install-deps-from=flathub --gpg-sign=${{ secrets.GPG_KEY_ID }} --disable-rofiles-fuse --disable-updates --force-clean --repo=repo apps/${APP_ID}/${APP_ID}.yml

      - name: Update repository
        shell: bash
        run: |
          # Update repo with GPG signing
          flatpak build-update-repo --gpg-sign=${{ secrets.GPG_KEY_ID }} --generate-static-deltas --prune repo/

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./repo
          force_orphan: true