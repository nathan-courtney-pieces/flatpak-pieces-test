name: Build and publish Flatpak repository

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/flathub-infra/flatpak-github-actions:freedesktop-23.08
      options: --privileged

    steps:
      - uses: actions/checkout@v3

      - name: Setup environment
        shell: bash
        run: |
          echo "Setting up environment..."
          # Set up a user as the docker image comes with none
          cat <<EOF > /etc/passwd
          root:x:0:0:root:/root:/bin/bash
          EOF
          
          cat <<EOF > /etc/group
          root:x:0:
          EOF
          
          # Configure Git for Flatpak operations
          git config --global --add safe.directory /__w/flatpak-pieces-test/flatpak-pieces-test
          
          # Add Flathub repository for dependencies
          flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
          
          # Clone shared-modules if needed
          if [ ! -d "shared-modules" ]; then
            git clone https://github.com/flathub/shared-modules
          fi
          
          # Create a script to sign with GPG non-interactively
          cat > /usr/local/bin/flatpak-sign << 'EOF'
          #!/bin/bash
          # Bypass need for passphrase by using loopback pinentry
          exec gpg --batch --yes --passphrase-file /tmp/passphrase.txt --pinentry-mode loopback --detach-sign "$@"
          EOF
          
          chmod +x /usr/local/bin/flatpak-sign
          
          # Save passphrase to a file (will be deleted later)
          echo "${{ secrets.GPG_PASSPHRASE }}" > /tmp/passphrase.txt
          chmod 600 /tmp/passphrase.txt
          
          # Import the GPG key
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import
          
          # Set trust level for the key
          echo -e "5\ny\n" | gpg --command-fd 0 --no-tty --batch --yes --edit-key ${{ secrets.GPG_KEY_ID }} trust

      - name: Fix icon issues
        env:
          APP_ID: com.pieces.os
        shell: bash
        run: |
          cd apps/${APP_ID}
          
          # Fix icon naming
          if [ -f "pieces_server.png" ]; then
            cp pieces_server.png ${APP_ID}.png
          
            # Update desktop file
            if [ -f "pieces-os.desktop" ]; then
              sed -i "s/Icon=pieces_server/Icon=${APP_ID}/g" pieces-os.desktop
            fi
          fi
          
          cd -

      - name: Build Pieces OS
        env:
          APP_ID: com.pieces.os
        shell: bash
        run: |
          # Build with custom signing script
          SIGN_WITH=/usr/local/bin/flatpak-sign flatpak-builder --verbose --user --install-deps-from=flathub --gpg-sign=${{ secrets.GPG_KEY_ID }} --disable-rofiles-fuse --disable-updates --force-clean --repo=repo apps/${APP_ID}/${APP_ID}.yml

      - name: Update repository
        shell: bash
        run: |
          # Update repo with custom signing script
          SIGN_WITH=/usr/local/bin/flatpak-sign flatpak build-update-repo --gpg-sign=${{ secrets.GPG_KEY_ID }} --generate-static-deltas --prune repo/

      - name: Clean up sensitive information
        if: always()
        shell: bash
        run: |
          # Remove the passphrase file
          rm -f /tmp/passphrase.txt

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./repo
          force_orphan: true